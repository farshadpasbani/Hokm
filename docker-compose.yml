version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5001:5001"
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - PORT=5001
      - ENV=development
    volumes:
      - ./:/app
      - ./models:/app/models
    restart: unless-stopped
    networks:
      - hokm-network

  frontend:
    build:
      context: ./hokm-mini-app
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=/api
      - REACT_APP_TELEGRAM_BOT_USERNAME=${TELEGRAM_BOT_USERNAME}
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - WDS_SOCKET_HOST=0.0.0.0
      - WDS_SOCKET_PORT=3000
      - HOST=0.0.0.0
    volumes:
      - ./hokm-mini-app:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - hokm-network
  
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - hokm-network
  
  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: "http nginx:80 --log=stdout"
    ports:
      - "4040:4040"
    depends_on:
      - nginx
    networks:
      - hokm-network

networks:
  hokm-network:
    driver: bridge 